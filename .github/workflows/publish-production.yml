name: Publish docker images and helm chart

on:
  push:
    branches:
      - master
      - dev

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
jobs:
  # Push images to GHCR.
  docker-publish:
    runs-on: ubuntu-latest

    # Smart way to publish images for all the components
    strategy:
      matrix:
        component:
          # imageTag is added later on with the closing brace
          - '{ "imageSuffix": "front", "imagePlatforms": "linux/amd64, linux/arm64", "repoRef": "{{ github.sha }}",'
          - '{ "imageSuffix": "manager", "imagePlatforms": "linux/amd64, linux/arm64", "repoRef": "{{ github.sha }}",'
          - '{ "imageSuffix": "sender", "imagePlatforms": "linux/amd64, linux/arm64", "repoRef": "{{ github.sha }}",'
          - '{ "imageSuffix": "checker", "imagePlatforms": "linux/amd64, linux/arm64", "repoRef": "{{ github.sha }}",'
          - '{ "imageSuffix": "screenshoter", "imagePlatforms": "linux/amd64", "repoRef": "{{ github.sha }}",'
          - '{ "imageSuffix": "comparator", "imagePlatforms": "linux/amd64", "repoRef": "{{ github.sha }}",'
    steps:
      -
        name: Set up variables
        run: |
          # Strip git ref prefix from version
          IMAGE_TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && IMAGE_TAG=$(echo $IMAGE_TAG | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$IMAGE_TAG" == "master" ] && IMAGE_TAG=latest

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      -
        name: Publish docker images
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: single-docker-publish
          token: ${{ secrets.PAT_TOKEN }}
          inputs: '${{ matrix.component }} "imageTag": "${{ env.IMAGE_TAG }}"}'

  chart-publish:
    runs-on: ubuntu-latest
    needs: docker-publish
    steps:
      -
        name: Publish Helm chart
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: helm-publish
          token: ${{ secrets.PAT_TOKEN }}
          inputs: '{ "repoRef": "${{ github.sha }}" }'
